#!/bin/bash
VERSION="0.1.2"

trap 'echo -ne "\n:::\n:::\tCaught signal, exiting at line $LINENO, while running :${BASH_COMMAND}:\n:::\n"; exit' SIGINT SIGQUIT

# jzip: Tool to extract Shift_JIS/CP932 (by default) archived zip files
#
# Copyright Â© 2017-2019 Kalin KOZHUHAROV <kalin@thinrope.net>



# {{{ external dependencies
declare -A COMMANDS
## app-arch/p7zip-16.02-r4
COMMANDS[7z]="/usr/bin/7z"

## sys-libs/glibc-2.27-r6
COMMANDS[iconv]="/usr/bin/iconv"
## app-text/convmv-2.04
COMMANDS[convmv]="/usr/bin/convmv"
# external dependencies }}}

NUMBER_OF_ARGUMENTS=2
function usage()
{
	echo -ne "\n"
	echo -ne "==================== $0-${VERSION} ====================\n"
	echo -ne "Usage: [FROM_ENCODING=ENCODING] $0 <l|e> <ARCHIVE>\n"
	echo -ne "\t l=lIST, x=ExTRACT ARCHIVE\n"
	echo -ne "\t ENCODING by default is 'CP932'; see 'convmv --list' for more\n"
}

# {{{ standard error checking
if [ "$#" -ne ${NUMBER_OF_ARGUMENTS} ]
then
	echo "$0: Illegal number of parameters: $# (should have been ${NUMBER_OF_ARGUMENTS}) !!!"
	usage
	exit -1
fi

for C in "${!COMMANDS[@]}"
do
	if [ ! -e "${COMMANDS[$C]}" ]
	then
		echo "$0: Cannot find ${C} command, tried ${COMMANDS[$C]} path..."
		echo "$0: Giving up, please fix the script."
		exit -2
	fi
	if [ ! -x "${COMMANDS[$C]}" ]
	then
		echo "$0: Cannot execute ${COMMANDS[$C]}, check your user permissions."
		echo "$0: Giving up, please use sudo as appropriate."
		exit -3
	fi
done
# standard error checking }}}

COMMAND=$1
ARCHIVE=$2

# Change that to "YES", iff you are brave AND work on non-UTF8 environment...
I_KNOW_WHAT_I_AM_DOING="NO"
# ... and fix that
FROM_LOCALE="ja_JP.Shift_JIS"

FROM_ENCODING=${FROM_ENCODING:-CP932}
TO_ENCODING=$(locale charmap)
if [ "x${TO_ENCODING}x" != "xUTF-8x" ]
then
	if [ "${I_KNOW_WHAT_I_AM_DOING}" != "YES" ]
	then
		echo "$0: You are blindly attempting suicide, see the source!"
		exit -13
	else
		echo "$0: You are venturing into unchartered territory..."
		echo "$0: FIXME: You need to have proper locale support..."
		echo "$0: you've been warned!"
	fi
fi

if [ "a${COMMAND}a" != "ala" ] && [ "a${COMMAND}a" != "axa" ]
then
	echo "$0: Illegal COMMAND: ${COMMAND} !!!"
	usage
	exit -2
fi

WORKDIR=$(pwd)
ARCHIVE_FILE="$(cd "$(dirname "${ARCHIVE}")"; pwd)/$(basename "${ARCHIVE}")"

if [ -f "${ARCHIVE_FILE}" ] && [ -r "${ARCHIVE_FILE}" ]
then
	echo "Processing ${ARCHIVE_FILE}, supposedly in ${FROM_ENCODING} encoding..."
else
	echo "$0: Cannot access ${ARCHIVE_FILE} !!!"
	exit 1
fi

if [ "a${COMMAND}a" == "ala" ]
then
	LC_ALL=ja_JP.Shift_JIS 7z ${COMMAND} "${ARCHIVE_FILE}" |iconv -c -f ${FROM_ENCODING} -t ${TO_ENCODING}
	exit 0
fi

if [ "a${COMMAND}a" == "axa" ]
then
	TMP="jzip.$$"
	echo "$0: extracting ${ARCHIVE_FILE}, supposedly in ${FROM_ENCODING} encoding into a temporary directory (${TMP}) ..."
	mkdir ${TMP} && cd ${TMP}
	LC_ALL=${FROM_LOCALE} ${COMMANDS[7z]} ${COMMAND} "${ARCHIVE_FILE}" |${COMMANDS[iconv]} -c -f ${FROM_ENCODING} -t ${TO_ENCODING}
	echo "$0: fixing filenames, converting ${FROM_ENCODING} -> ${TO_ENCODING} ..."
	${COMMANDS[convmv]} -f ${FROM_ENCODING} -t ${TO_ENCODING} --notest -r .
	echo "$0: moving files to ${WORKDIR} and removing the temporary directory (${TMP}) ..."
	cd ${WORKDIR}
	mv -i ${TMP}/* ${WORKDIR}/
	rm -rf ${TMP}
	echo "$0: done extracting."
else
	echo "$0: Unexpected execution path !!!"
	exit -2
fi

# -------------------------------------------------------------------------------------------------
# YYYY-mm-dd	ver	Changes
# -------------------------------------------------------------------------------------------------
# 2017-11-27	0.1.1	refactor to include Changes and better UI
#			introduce COMMANDS array
# 2019-02-22	0.1.2	fix a bug in argument handling
#			handle filenames with spaces (use `mv` instead of `cp *`)
